{
  "version": "1.1",
  "engine": "linux/amd64|Transformer|1.40.11|1b271555882eacdfb4e6598d6d0552e9b9b1449b|2024-02-02_01:36:22PM",
  "containerized": false,
  "host_distro": {
    "name": "Ubuntu",
    "version": "24.04",
    "display_name": "Ubuntu 24.04.1 LTS"
  },
  "type": "build",
  "state": "done",
  "target_reference": "react-frontend",
  "system": {
    "type": "Linux",
    "release": "6.8.0-49-generic",
    "distro": {
      "name": "Alpine Linux",
      "version": "3.20.3",
      "display_name": "Alpine Linux v3.20"
    }
  },
  "source_image": {
    "identity": {
      "id": "sha256:92192a7e32278cf3a75f0dbf12221b2ecf986299e969ee5e8b0fcc7d96f348bf",
      "tags": [
        "latest"
      ],
      "names": [
        "frontend-demo:latest",
        "react-frontend:latest"
      ]
    },
    "size": 52688979,
    "size_human": "53 MB",
    "create_time": "2024-11-29T05:21:07Z",
    "docker_version": "",
    "architecture": "amd64",
    "exposed_ports": [
      "80/tcp"
    ],
    "os": "linux",
    "labels": {
      "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
    },
    "env_vars": [
      "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
      "NGINX_VERSION=1.27.3",
      "PKG_RELEASE=1",
      "DYNPKG_RELEASE=1",
      "NJS_VERSION=0.8.7",
      "NJS_RELEASE=1"
    ],
    "container_entry": {
      "exe_path": ""
    }
  },
  "minified_image_size": 9824852,
  "minified_image_size_human": "9.8 MB",
  "minified_image": "react-frontend.slim",
  "minified_image_id": "sha256:8e504f03f1b4124f8f28c9163be01f73f7a1d24f1bde9c7477081308ad498f7d",
  "minified_image_digest": "sha256:b1fca9e1cf83c48748c54cf671239615b2d0f8f96e713d220d0597381f7acb6a",
  "minified_image_has_data": true,
  "minified_by": 5.362826737746278,
  "artifact_location": "/tmp/slim-state/.slim-state/images/92192a7e32278cf3a75f0dbf12221b2ecf986299e969ee5e8b0fcc7d96f348bf/artifacts",
  "container_report_name": "creport.json",
  "seccomp_profile_name": "react-frontend-seccomp.json",
  "apparmor_profile_name": "react-frontend-apparmor-profile",
  "image_stack": [
    {
      "is_top_image": true,
      "id": "sha256:92192a7e32278cf3a75f0dbf12221b2ecf986299e969ee5e8b0fcc7d96f348bf",
      "full_name": "frontend-demo:latest",
      "repo_name": "frontend-demo",
      "version_tag": "latest",
      "raw_tags": [
        "frontend-demo:latest",
        "react-frontend:latest"
      ],
      "create_time": "2024-11-29T05:21:07Z",
      "new_size": 52688979,
      "new_size_human": "53 MB",
      "instructions": [
        {
          "type": "ADD",
          "time": "2024-09-06T12:05:36Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 7797760,
          "size_human": "7.8 MB",
          "params": "alpine-minirootfs-3.20.3-x86_64.tar.gz /",
          "command_snippet": "ADD alpine-minirootfs-3.20.3-x86_64.tar.gz /",
          "command_all": "ADD alpine-minirootfs-3.20.3-x86_64.tar.gz /",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-09-06T19:00:00+07:00",
          "inst_set_time_index": 0,
          "inst_set_time_reverse_index": 2
        },
        {
          "type": "CMD",
          "time": "2024-09-06T12:05:36Z",
          "is_nop": false,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/bin/sh\"]\n",
          "command_snippet": "CMD [\"/bin/sh\"]\n",
          "command_all": "CMD [\"/bin/sh\"]\n",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-09-06T19:00:00+07:00",
          "inst_set_time_index": 0,
          "inst_set_time_reverse_index": 2
        },
        {
          "type": "LABEL",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
          "command_snippet": "LABEL maintainer=NGINX Docker Maintainers <d...",
          "command_all": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "NGINX_VERSION=1.27.3",
          "command_snippet": "ENV NGINX_VERSION=1.27.3",
          "command_all": "ENV NGINX_VERSION=1.27.3",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PKG_RELEASE=1",
          "command_snippet": "ENV PKG_RELEASE=1",
          "command_all": "ENV PKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "DYNPKG_RELEASE=1",
          "command_snippet": "ENV DYNPKG_RELEASE=1",
          "command_all": "ENV DYNPKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "RUN",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 9515181,
          "size_human": "9.5 MB",
          "command_snippet": "RUN set -x && \\\n\taddgroup -g 101 -S nginx &&...",
          "command_all": "RUN set -x && \\\n\taddgroup -g 101 -S nginx && \\\n\tadduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx && \\\n\tapkArch=\"$(cat /etc/apk/arch)\" && \\\n\tnginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \" && \\\n\tapk add --no-cache --virtual .checksum-deps         openssl && \\\n\tcase \"$apkArch\" in         x86_64|aarch64)             set -x && \\\n\tKEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\" && \\\n\twget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub && \\\n\tif echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi && \\\n\tapk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x && \\\n\ttempDir=\"$(mktemp -d)\" && \\\n\tchown nobody:nobody $tempDir && \\\n\tapk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl && \\\n\tsu nobody -s /bin/sh -c \"                 export HOME=${tempDir} && \\\n\tcd ${tempDir} && \\\n\tcurl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tPKGOSSCHECKSUM=\\\"5617feecfb441cd972b9ac51a2fd78384a3d2bde2f399163be0746d44ec8f7d8c47234af4f6b0012667c3d0446cced521f55f8f71254415e3766c2e3802bf960 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\" && \\\n\tif [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi && \\\n\ttar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tcd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE} && \\\n\tcd alpine && \\\n\tmake base && \\\n\tapk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk && \\\n\tabuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \" && \\\n\tcp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ && \\\n\tapk del --no-network .build-deps && \\\n\tapk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac && \\\n\tapk del --no-network .checksum-deps && \\\n\tif [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi && \\\n\tif [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi && \\\n\tapk add --no-cache --virtual .gettext gettext && \\\n\tmv /usr/bin/envsubst /tmp/ && \\\n\trunDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\" && \\\n\tapk add --no-cache $runDeps && \\\n\tapk del --no-network .gettext && \\\n\tmv /tmp/envsubst /usr/local/bin/ && \\\n\tapk add --no-cache tzdata && \\\n\tln -sf /dev/stdout /var/log/nginx/access.log && \\\n\tln -sf /dev/stderr /var/log/nginx/error.log && \\\n\tmkdir /docker-entrypoint.d",
          "system_commands": [
            "set -x",
            "addgroup -g 101 -S nginx",
            "adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx",
            "apkArch=\"$(cat /etc/apk/arch)\"",
            "nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"",
            "apk add --no-cache --virtual .checksum-deps         openssl",
            "case \"$apkArch\" in         x86_64|aarch64)             set -x",
            "KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"",
            "wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub",
            "if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi",
            "apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x",
            "tempDir=\"$(mktemp -d)\"",
            "chown nobody:nobody $tempDir",
            "apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl",
            "su nobody -s /bin/sh -c \"                 export HOME=${tempDir}",
            "cd ${tempDir}",
            "curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "PKGOSSCHECKSUM=\"5617feecfb441cd972b9ac51a2fd78384a3d2bde2f399163be0746d44ec8f7d8c47234af4f6b0012667c3d0446cced521f55f8f71254415e3766c2e3802bf960 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\"",
            "if [ \"$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\" = \"$PKGOSSCHECKSUM\" ]; then                     echo \"pkg-oss tarball checksum verification succeeded!\";                 else                     echo \"pkg-oss tarball checksum verification failed!\";                     exit 1;                 fi",
            "tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}",
            "cd alpine",
            "make base",
            "apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk",
            "abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"",
            "cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/",
            "apk del --no-network .build-deps",
            "apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac",
            "apk del --no-network .checksum-deps",
            "if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi",
            "if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi",
            "apk add --no-cache --virtual .gettext gettext",
            "mv /usr/bin/envsubst /tmp/",
            "runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"",
            "apk add --no-cache $runDeps",
            "apk del --no-network .gettext",
            "mv /tmp/envsubst /usr/local/bin/",
            "apk add --no-cache tzdata",
            "ln -sf /dev/stdout /var/log/nginx/access.log",
            "ln -sf /dev/stderr /var/log/nginx/error.log",
            "mkdir /docker-entrypoint.d"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1620,
          "size_human": "1.6 kB",
          "params": "docker-entrypoint.sh /",
          "command_snippet": "COPY docker-entrypoint.sh /",
          "command_all": "COPY docker-entrypoint.sh /",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 2125,
          "size_human": "2.1 kB",
          "params": "10-listen-on-ipv6-by-default.sh /docker-entrypoint.d",
          "command_snippet": "COPY 10-listen-on-ipv6-by-default.sh /docker...",
          "command_all": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 389,
          "size_human": "389 B",
          "params": "15-local-resolvers.envsh /docker-entrypoint.d",
          "command_snippet": "COPY 15-local-resolvers.envsh /docker-entryp...",
          "command_all": "COPY 15-local-resolvers.envsh /docker-entrypoint.d",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 3018,
          "size_human": "3.0 kB",
          "params": "20-envsubst-on-templates.sh /docker-entrypoint.d",
          "command_snippet": "COPY 20-envsubst-on-templates.sh /docker-ent...",
          "command_all": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 4619,
          "size_human": "4.6 kB",
          "params": "30-tune-worker-processes.sh /docker-entrypoint.d",
          "command_snippet": "COPY 30-tune-worker-processes.sh /docker-ent...",
          "command_all": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENTRYPOINT",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/docker-entrypoint.sh\"]\n",
          "command_snippet": "ENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
          "command_all": "ENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "EXPOSE",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "80/tcp",
          "command_snippet": "EXPOSE 80/tcp",
          "command_all": "EXPOSE 80/tcp",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "STOPSIGNAL",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "SIGQUIT",
          "command_snippet": "STOPSIGNAL SIGQUIT",
          "command_all": "STOPSIGNAL SIGQUIT",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "CMD",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_snippet": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_all": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "NJS_VERSION=0.8.7",
          "command_snippet": "ENV NJS_VERSION=0.8.7",
          "command_all": "ENV NJS_VERSION=0.8.7",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "NJS_RELEASE=1",
          "command_snippet": "ENV NJS_RELEASE=1",
          "command_all": "ENV NJS_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "RUN",
          "time": "2024-11-26T18:42:08Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 35212246,
          "size_human": "35 MB",
          "command_snippet": "RUN set -x && \\\n\tapkArch=\"$(cat /etc/apk/arc...",
          "command_all": "RUN set -x && \\\n\tapkArch=\"$(cat /etc/apk/arch)\" && \\\n\tnginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \" && \\\n\tapk add --no-cache --virtual .checksum-deps         openssl && \\\n\tcase \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x && \\\n\ttempDir=\"$(mktemp -d)\" && \\\n\tchown nobody:nobody $tempDir && \\\n\tapk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils                 curl && \\\n\tsu nobody -s /bin/sh -c \"                 export HOME=${tempDir} && \\\n\tcd ${tempDir} && \\\n\tcurl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tPKGOSSCHECKSUM=\\\"5617feecfb441cd972b9ac51a2fd78384a3d2bde2f399163be0746d44ec8f7d8c47234af4f6b0012667c3d0446cced521f55f8f71254415e3766c2e3802bf960 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\" && \\\n\tif [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi && \\\n\ttar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz && \\\n\tcd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE} && \\\n\tcd alpine && \\\n\tmake module-geoip module-image-filter module-njs module-xslt && \\\n\tapk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk && \\\n\tabuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \" && \\\n\tcp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ && \\\n\tapk del --no-network .build-deps && \\\n\tapk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac && \\\n\tapk del --no-network .checksum-deps && \\\n\tif [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi && \\\n\tif [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi && \\\n\tapk add --no-cache curl ca-certificates",
          "system_commands": [
            "set -x",
            "apkArch=\"$(cat /etc/apk/arch)\"",
            "nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"",
            "apk add --no-cache --virtual .checksum-deps         openssl",
            "case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x",
            "tempDir=\"$(mktemp -d)\"",
            "chown nobody:nobody $tempDir",
            "apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils                 curl",
            "su nobody -s /bin/sh -c \"                 export HOME=${tempDir}",
            "cd ${tempDir}",
            "curl -f -L -O https://github.com/nginx/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "PKGOSSCHECKSUM=\"5617feecfb441cd972b9ac51a2fd78384a3d2bde2f399163be0746d44ec8f7d8c47234af4f6b0012667c3d0446cced521f55f8f71254415e3766c2e3802bf960 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\"",
            "if [ \"$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\" = \"$PKGOSSCHECKSUM\" ]; then                     echo \"pkg-oss tarball checksum verification succeeded!\";                 else                     echo \"pkg-oss tarball checksum verification failed!\";                     exit 1;                 fi",
            "tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz",
            "cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}",
            "cd alpine",
            "make module-geoip module-image-filter module-njs module-xslt",
            "apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk",
            "abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"",
            "cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/",
            "apk del --no-network .build-deps",
            "apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac",
            "apk del --no-network .checksum-deps",
            "if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi",
            "if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi",
            "apk add --no-cache curl ca-certificates"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-27T01:30:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2024-11-29T05:21:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 151377,
          "size_human": "151 kB",
          "params": "/app/dist /usr/share/nginx/html",
          "command_snippet": "COPY /app/dist /usr/share/nginx/html",
          "command_all": "COPY /app/dist /usr/share/nginx/html",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-29T12:15:00+07:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 0
        },
        {
          "type": "COPY",
          "time": "2024-11-29T05:21:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 644,
          "size_human": "644 B",
          "params": "/app/nginx/custom.conf /etc/nginx/conf.d/default.conf",
          "command_snippet": "COPY /app/nginx/custom.conf /etc/nginx/conf....",
          "command_all": "COPY /app/nginx/custom.conf /etc/nginx/conf.d/default.conf",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-29T12:15:00+07:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 0
        },
        {
          "type": "EXPOSE",
          "time": "2024-11-29T05:21:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "80/tcp",
          "command_snippet": "EXPOSE 80/tcp",
          "command_all": "EXPOSE 80/tcp",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-29T12:15:00+07:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 0
        },
        {
          "type": "CMD",
          "time": "2024-11-29T05:21:07Z",
          "is_last_instruction": true,
          "is_nop": false,
          "is_exec_form": true,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 0,
          "params": "[\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_snippet": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_all": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "comment": "buildkit.dockerfile.v0",
          "raw_tags": [
            "frontend-demo:latest",
            "react-frontend:latest"
          ],
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-11-29T12:15:00+07:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 0
        }
      ]
    }
  ],
  "image_created": true,
  "image_build_engine": "internal"
}
